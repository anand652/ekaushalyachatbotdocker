name: CI/CD Deployment

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 3: Build backend image
      - name: Build backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest ./backend_api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest

      # Step 4: Build frontend image
      - name: Build frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-frontend:latest ./frontend_app
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-frontend:latest

      # Step 5: Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/chatbot-deploy

            # Create Docker network if it doesn't exist
            docker network create chatbot-network || true

            # Connect existing DB container to the network (if not connected)
            docker network connect chatbot-network chatbot_db || true

            # Pull latest images
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-frontend:latest

            # Stop old containers
            docker stop backend frontend || true
            docker rm backend frontend || true

            # Run backend container connected to DB network
            docker run -d \
              --name backend \
              --network chatbot-network \
              --env-file ./backend.env \
              -p 8000:8000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-backend:latest

            # Run frontend container connected to DB network
            docker run -d \
              --name frontend \
              --network chatbot-network \
              --env-file ./frontend.env \
              -p 80:8501 \
              ${{ secrets.DOCKERHUB_USERNAME }}/chatbot-frontend:latest
